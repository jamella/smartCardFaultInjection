from Crypto.Signature import PKCS1_v1_5
from Crypto.Hash import SHA
from Crypto.PublicKey import RSA
import gmpy2
from gmpy2 import mpz

'''
#this section creates a signature and verifies it

testHash=SHA.new(('0102030405').decode('hex'))
print testHash.hexdigest()
testKey=RSA.generate(2048)
testSigner=PKCS1_v1_5.new(testKey)
testSignature=testSigner.sign(testHash)
print testSignature.encode('hex')

testHash2=SHA.new(('0102030405').decode('hex'))
testVerifier=PKCS1_v1_5.new(testKey)
print testHash2.hexdigest()
if(testVerifier.verify(testHash2,testSignature)):
    print('test signature verifies')
else:
    print('test signature does not verify')
'''

#these variables need to be changed based on the private and public keys teh applet 
#	is using in testing

ModulusInHex
pubKeyInHex='010001'

Modulus= long(ModulusInHex,16)
pubKey = long(pubKeyInHex,16)
#print Modulus
#print pubKey

message=('0102030405'.decode('hex'))
publicKeyTuple=(Modulus,pubKey)
hash=SHA.new(message)
key=RSA.construct(publicKeyTuple)
checker=PKCS1_v1_5.new(key)

hexSignature='303E6F3D8608AC0367B475E1B718DD77DF7BBE03929B6AD8B1561CB034724E209D6D4B7578C35997503EE5521BC6CE207E648159B86FDDA6A56B1610AEE1E5224657350AD1EC2EC209EE9D34006A4C9CFFD48B0E761B2324F91600E4B4B35DAAAB2D35217A6B4E790F6B6399E00D95BABF02ECC231C28D41903C08F6701EFBC211353470AC41A8E71BBEF9340D735C4275610356432052579A646842ECA5AC08049F7C8550C5D627D5B594D057115E72267250509D53F04EE5677C9788FE26685A826F1D180B0472C60933342E81C313783BCCA5780C36D4F3BE24003ECCEB75256714A8181CDB9DA6D19BC21FDDE3AD6FEFD16C290BC4407173850D23D73211'
nonHexSignature=hexSignature.decode('hex')

boolVal = checker.verify(hash,nonHexSignature)
if(boolVal):
    print('verifies')
else:
    print('does not verify')
